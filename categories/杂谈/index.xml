<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>杂谈 on 孤星的天空的博客</title>
    <link>https://SolitaryStarSky.github.io/categories/%E6%9D%82%E8%B0%88/</link>
    <description>Recent content in 杂谈 on 孤星的天空的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Wed, 25 Mar 2020 17:17:09 +0800</lastBuildDate>
    
	<atom:link href="https://SolitaryStarSky.github.io/categories/%E6%9D%82%E8%B0%88/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>7 11问题</title>
      <link>https://SolitaryStarSky.github.io/post/7-11%E9%97%AE%E9%A2%98/</link>
      <pubDate>Wed, 25 Mar 2020 17:17:09 +0800</pubDate>
      
      <guid>https://SolitaryStarSky.github.io/post/7-11%E9%97%AE%E9%A2%98/</guid>
      <description>7-11问题 一位顾客在7-11买了4件商品，这4件商品相乘的价格是7.11元，相加的价格也是7.11元，请用蛮力法编写程序，输出这4件商品的价格分别是多少。
思路：蛮力（暴力）法 约束条件就2个，a+b+c+d=7.11，abcd=7.11。写3个for循环遍历出所有答案即可
坑点：C/C++浮点数误差分析 如上图，C语言的浮点数是有一定误差的，在误差范围内，我们一般默认实际值为正确答案
难点： 本题难点就在于如何解决该误差
方法1： 避免浮点数的计算
#include&amp;lt;iostream&amp;gt;#include&amp;lt;math.h&amp;gt;using namespace std; /*711000000*/ /*2147483648*/ int main() { double a,b,c,d; cout&amp;lt;&amp;lt;&amp;#34;a\tb\tc\td&amp;#34;&amp;lt;&amp;lt;endl;	for(a=1;a&amp;lt;711;a++) for(b=1;b&amp;lt;711;b++) for(c=1;c&amp;lt;711;c++) { d=711-(a+b+c); if(a*b*c*d==711000000) { cout&amp;lt;&amp;lt;a/100&amp;lt;&amp;lt;&amp;#34;\t&amp;#34;&amp;lt;&amp;lt;b/100&amp;lt;&amp;lt;&amp;#34;\t&amp;#34;&amp;lt;&amp;lt;c/100&amp;lt;&amp;lt;&amp;#34;\t&amp;#34;&amp;lt;&amp;lt;d/100&amp;lt;&amp;lt;endl; } } return 0; } 方法2： 标明精度进行运算
#include&amp;lt;iostream&amp;gt;#include&amp;lt;math.h&amp;gt;using namespace std; /*711000000*/ /*2147483648*/ int main() { double a,b,c,d; cout&amp;lt;&amp;lt;&amp;#34;a\tb\tc\td&amp;#34;&amp;lt;&amp;lt;endl;	for(a=0.01;a&amp;lt;7.11;a=a+0.01) for(b=0.01;b&amp;lt;7.11;b=b+0.01) for(c=0.01;c&amp;lt;7.11;c=c+0.01) { d=7.11-(a+b+c); if(fabs(a*b*c*d-7.11)&amp;lt;10e-8) { cout&amp;lt;&amp;lt;a&amp;lt;&amp;lt;&amp;#34;\t&amp;#34;&amp;lt;&amp;lt;b&amp;lt;&amp;lt;&amp;#34;\t&amp;#34;&amp;lt;&amp;lt;c&amp;lt;&amp;lt;&amp;#34;\t&amp;#34;&amp;lt;&amp;lt;d&amp;lt;&amp;lt;endl; } } return 0; }  </description>
    </item>
    
  </channel>
</rss>